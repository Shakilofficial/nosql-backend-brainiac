import { Server } from 'http';
import app from './app';
import config from './app/config';
import { connectDB } from './app/config/db';

let server: Server;

const start = async (): Promise<void> => {
  try {
    await connectDB();
    server = app.listen(config.port, () => {
      console.log(`üöÄ Server is running on port ${config.port} üèÉüèΩ‚Äç‚ôÇÔ∏è‚û°Ô∏è`);
    });
  } catch (error) {
    console.error('üö® Failed to start the server ‚ùå', error);
    process.exit(1);
  }
};

const shutdown = (reason: string): void => {
  console.log(`üö® ${reason}, shutting down the server üèÉüèΩ‚Äç‚ôÇÔ∏è`);
  if (server) {
    server.close(() => {
      console.log('üëã Server is closed üèÉüèΩ‚Äç‚ôÇÔ∏è');
      process.exit(1);
    });
  } else {
    process.exit(1);
  }
};

// Handle unhandled rejections
process.on('unhandledRejection', (reason) => {
  console.error('üö® Unhandled Rejection detected ‚ùå:', reason);
  shutdown('Unhandled Rejection');
});

// Handle uncaught exceptions
process.on('uncaughtException', (error) => {
  console.error('üö® Uncaught Exception detected ‚ùå:', error);
  shutdown('Uncaught Exception');
});

start();
